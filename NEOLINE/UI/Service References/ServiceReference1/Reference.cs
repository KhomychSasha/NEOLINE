//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UI.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/DAL.Entities")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOUser", Namespace="http://schemas.datacontract.org/2004/07/BLL")]
    [System.SerializableAttribute()]
    public partial class DTOUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DTOAvatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DTOEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DTOIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DTOIsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DTOLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DTONicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DTOPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.ServiceReference1.Product[] DTOProductsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DTOAvatar {
            get {
                return this.DTOAvatarField;
            }
            set {
                if ((object.ReferenceEquals(this.DTOAvatarField, value) != true)) {
                    this.DTOAvatarField = value;
                    this.RaisePropertyChanged("DTOAvatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DTOEmail {
            get {
                return this.DTOEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.DTOEmailField, value) != true)) {
                    this.DTOEmailField = value;
                    this.RaisePropertyChanged("DTOEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DTOId {
            get {
                return this.DTOIdField;
            }
            set {
                if ((this.DTOIdField.Equals(value) != true)) {
                    this.DTOIdField = value;
                    this.RaisePropertyChanged("DTOId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DTOIsAdmin {
            get {
                return this.DTOIsAdminField;
            }
            set {
                if ((this.DTOIsAdminField.Equals(value) != true)) {
                    this.DTOIsAdminField = value;
                    this.RaisePropertyChanged("DTOIsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DTOLogin {
            get {
                return this.DTOLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.DTOLoginField, value) != true)) {
                    this.DTOLoginField = value;
                    this.RaisePropertyChanged("DTOLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DTONickname {
            get {
                return this.DTONicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.DTONicknameField, value) != true)) {
                    this.DTONicknameField = value;
                    this.RaisePropertyChanged("DTONickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DTOPassword {
            get {
                return this.DTOPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.DTOPasswordField, value) != true)) {
                    this.DTOPasswordField = value;
                    this.RaisePropertyChanged("DTOPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.ServiceReference1.Product[] DTOProducts {
            get {
                return this.DTOProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.DTOProductsField, value) != true)) {
                    this.DTOProductsField = value;
                    this.RaisePropertyChanged("DTOProducts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOProduct", Namespace="http://schemas.datacontract.org/2004/07/BLL")]
    [System.SerializableAttribute()]
    public partial class DTOProduct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DTOAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.ServiceReference1.Category DTOCategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DTOCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DTODescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DTOIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DTOPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DTOPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DTOProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DTOUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.ServiceReference1.User DTOUsersProductsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DTOAmount {
            get {
                return this.DTOAmountField;
            }
            set {
                if ((this.DTOAmountField.Equals(value) != true)) {
                    this.DTOAmountField = value;
                    this.RaisePropertyChanged("DTOAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.ServiceReference1.Category DTOCategories {
            get {
                return this.DTOCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.DTOCategoriesField, value) != true)) {
                    this.DTOCategoriesField = value;
                    this.RaisePropertyChanged("DTOCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DTOCategoryID {
            get {
                return this.DTOCategoryIDField;
            }
            set {
                if ((this.DTOCategoryIDField.Equals(value) != true)) {
                    this.DTOCategoryIDField = value;
                    this.RaisePropertyChanged("DTOCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DTODescription {
            get {
                return this.DTODescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DTODescriptionField, value) != true)) {
                    this.DTODescriptionField = value;
                    this.RaisePropertyChanged("DTODescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DTOId {
            get {
                return this.DTOIdField;
            }
            set {
                if ((this.DTOIdField.Equals(value) != true)) {
                    this.DTOIdField = value;
                    this.RaisePropertyChanged("DTOId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DTOPhoto {
            get {
                return this.DTOPhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.DTOPhotoField, value) != true)) {
                    this.DTOPhotoField = value;
                    this.RaisePropertyChanged("DTOPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DTOPrice {
            get {
                return this.DTOPriceField;
            }
            set {
                if ((this.DTOPriceField.Equals(value) != true)) {
                    this.DTOPriceField = value;
                    this.RaisePropertyChanged("DTOPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DTOProductName {
            get {
                return this.DTOProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DTOProductNameField, value) != true)) {
                    this.DTOProductNameField = value;
                    this.RaisePropertyChanged("DTOProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DTOUserID {
            get {
                return this.DTOUserIDField;
            }
            set {
                if ((this.DTOUserIDField.Equals(value) != true)) {
                    this.DTOUserIDField = value;
                    this.RaisePropertyChanged("DTOUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.ServiceReference1.User DTOUsersProducts {
            get {
                return this.DTOUsersProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.DTOUsersProductsField, value) != true)) {
                    this.DTOUsersProductsField = value;
                    this.RaisePropertyChanged("DTOUsersProducts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/DAL.Entities")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.ServiceReference1.Product[] ProductsInCategoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.ServiceReference1.Product[] ProductsInCategory {
            get {
                return this.ProductsInCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsInCategoryField, value) != true)) {
                    this.ProductsInCategoryField = value;
                    this.RaisePropertyChanged("ProductsInCategory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DAL.Entities")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] AvatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UI.ServiceReference1.Product[] ProductsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Avatar {
            get {
                return this.AvatarField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarField, value) != true)) {
                    this.AvatarField = value;
                    this.RaisePropertyChanged("Avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UI.ServiceReference1.Product[] Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUser", ReplyAction="http://tempuri.org/IService1/AddUserResponse")]
        void AddUser(string login, string pass, string nick, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUser", ReplyAction="http://tempuri.org/IService1/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(string login, string pass, string nick, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduct", ReplyAction="http://tempuri.org/IService1/AddProductResponse")]
        void AddProduct(string productName, string descr, byte[] photo, int userID, int AmountOfProduct, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduct", ReplyAction="http://tempuri.org/IService1/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(string productName, string descr, byte[] photo, int userID, int AmountOfProduct, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificationOnAdmin", ReplyAction="http://tempuri.org/IService1/VerificationOnAdminResponse")]
        bool VerificationOnAdmin(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificationOnAdmin", ReplyAction="http://tempuri.org/IService1/VerificationOnAdminResponse")]
        System.Threading.Tasks.Task<bool> VerificationOnAdminAsync(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificationOnExistUser", ReplyAction="http://tempuri.org/IService1/VerificationOnExistUserResponse")]
        bool VerificationOnExistUser(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificationOnExistUser", ReplyAction="http://tempuri.org/IService1/VerificationOnExistUserResponse")]
        System.Threading.Tasks.Task<bool> VerificationOnExistUserAsync(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificationLogin", ReplyAction="http://tempuri.org/IService1/VerificationLoginResponse")]
        bool VerificationLogin(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificationLogin", ReplyAction="http://tempuri.org/IService1/VerificationLoginResponse")]
        System.Threading.Tasks.Task<bool> VerificationLoginAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificationNickname", ReplyAction="http://tempuri.org/IService1/VerificationNicknameResponse")]
        bool VerificationNickname(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificationNickname", ReplyAction="http://tempuri.org/IService1/VerificationNicknameResponse")]
        System.Threading.Tasks.Task<bool> VerificationNicknameAsync(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificationEmail", ReplyAction="http://tempuri.org/IService1/VerificationEmailResponse")]
        bool VerificationEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerificationEmail", ReplyAction="http://tempuri.org/IService1/VerificationEmailResponse")]
        System.Threading.Tasks.Task<bool> VerificationEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProductPrice", ReplyAction="http://tempuri.org/IService1/UpdateProductPriceResponse")]
        void UpdateProductPrice(string nameProduct, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProductPrice", ReplyAction="http://tempuri.org/IService1/UpdateProductPriceResponse")]
        System.Threading.Tasks.Task UpdateProductPriceAsync(string nameProduct, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProductAmount", ReplyAction="http://tempuri.org/IService1/UpdateProductAmountResponse")]
        void UpdateProductAmount(string nameProduct, int amountProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProductAmount", ReplyAction="http://tempuri.org/IService1/UpdateProductAmountResponse")]
        System.Threading.Tasks.Task UpdateProductAmountAsync(string nameProduct, int amountProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProductDescription", ReplyAction="http://tempuri.org/IService1/UpdateProductDescriptionResponse")]
        void UpdateProductDescription(string nameProduct, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProductDescription", ReplyAction="http://tempuri.org/IService1/UpdateProductDescriptionResponse")]
        System.Threading.Tasks.Task UpdateProductDescriptionAsync(string nameProduct, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserProduct", ReplyAction="http://tempuri.org/IService1/UserProductResponse")]
        UI.ServiceReference1.Product[] UserProduct(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserProduct", ReplyAction="http://tempuri.org/IService1/UserProductResponse")]
        System.Threading.Tasks.Task<UI.ServiceReference1.Product[]> UserProductAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WarehoseProductAddedByAdmin", ReplyAction="http://tempuri.org/IService1/WarehoseProductAddedByAdminResponse")]
        UI.ServiceReference1.Product[] WarehoseProductAddedByAdmin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WarehoseProductAddedByAdmin", ReplyAction="http://tempuri.org/IService1/WarehoseProductAddedByAdminResponse")]
        System.Threading.Tasks.Task<UI.ServiceReference1.Product[]> WarehoseProductAddedByAdminAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProductPhoto", ReplyAction="http://tempuri.org/IService1/UpdateProductPhotoResponse")]
        void UpdateProductPhoto(string productName, byte[] photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProductPhoto", ReplyAction="http://tempuri.org/IService1/UpdateProductPhotoResponse")]
        System.Threading.Tasks.Task UpdateProductPhotoAsync(string productName, byte[] photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserUpdateAvatar", ReplyAction="http://tempuri.org/IService1/UserUpdateAvatarResponse")]
        void UserUpdateAvatar(string login, byte[] avatar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserUpdateAvatar", ReplyAction="http://tempuri.org/IService1/UserUpdateAvatarResponse")]
        System.Threading.Tasks.Task UserUpdateAvatarAsync(string login, byte[] avatar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangePass", ReplyAction="http://tempuri.org/IService1/ChangePassResponse")]
        void ChangePass(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangePass", ReplyAction="http://tempuri.org/IService1/ChangePassResponse")]
        System.Threading.Tasks.Task ChangePassAsync(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangeUserEmail", ReplyAction="http://tempuri.org/IService1/ChangeUserEmailResponse")]
        void ChangeUserEmail(string login, string newEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangeUserEmail", ReplyAction="http://tempuri.org/IService1/ChangeUserEmailResponse")]
        System.Threading.Tasks.Task ChangeUserEmailAsync(string login, string newEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangeUserNickname", ReplyAction="http://tempuri.org/IService1/ChangeUserNicknameResponse")]
        void ChangeUserNickname(string login, string nick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangeUserNickname", ReplyAction="http://tempuri.org/IService1/ChangeUserNicknameResponse")]
        System.Threading.Tasks.Task ChangeUserNicknameAsync(string login, string nick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserInfo", ReplyAction="http://tempuri.org/IService1/UserInfoResponse")]
        UI.ServiceReference1.DTOUser UserInfo(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserInfo", ReplyAction="http://tempuri.org/IService1/UserInfoResponse")]
        System.Threading.Tasks.Task<UI.ServiceReference1.DTOUser> UserInfoAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProdInfo", ReplyAction="http://tempuri.org/IService1/ProdInfoResponse")]
        UI.ServiceReference1.DTOProduct ProdInfo(string productName, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProdInfo", ReplyAction="http://tempuri.org/IService1/ProdInfoResponse")]
        System.Threading.Tasks.Task<UI.ServiceReference1.DTOProduct> ProdInfoAsync(string productName, int userID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : UI.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<UI.ServiceReference1.IService1>, UI.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddUser(string login, string pass, string nick, string email) {
            base.Channel.AddUser(login, pass, nick, email);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(string login, string pass, string nick, string email) {
            return base.Channel.AddUserAsync(login, pass, nick, email);
        }
        
        public void AddProduct(string productName, string descr, byte[] photo, int userID, int AmountOfProduct, int price) {
            base.Channel.AddProduct(productName, descr, photo, userID, AmountOfProduct, price);
        }
        
        public System.Threading.Tasks.Task AddProductAsync(string productName, string descr, byte[] photo, int userID, int AmountOfProduct, int price) {
            return base.Channel.AddProductAsync(productName, descr, photo, userID, AmountOfProduct, price);
        }
        
        public bool VerificationOnAdmin(string login, string pass) {
            return base.Channel.VerificationOnAdmin(login, pass);
        }
        
        public System.Threading.Tasks.Task<bool> VerificationOnAdminAsync(string login, string pass) {
            return base.Channel.VerificationOnAdminAsync(login, pass);
        }
        
        public bool VerificationOnExistUser(string login, string pass) {
            return base.Channel.VerificationOnExistUser(login, pass);
        }
        
        public System.Threading.Tasks.Task<bool> VerificationOnExistUserAsync(string login, string pass) {
            return base.Channel.VerificationOnExistUserAsync(login, pass);
        }
        
        public bool VerificationLogin(string login) {
            return base.Channel.VerificationLogin(login);
        }
        
        public System.Threading.Tasks.Task<bool> VerificationLoginAsync(string login) {
            return base.Channel.VerificationLoginAsync(login);
        }
        
        public bool VerificationNickname(string nickname) {
            return base.Channel.VerificationNickname(nickname);
        }
        
        public System.Threading.Tasks.Task<bool> VerificationNicknameAsync(string nickname) {
            return base.Channel.VerificationNicknameAsync(nickname);
        }
        
        public bool VerificationEmail(string email) {
            return base.Channel.VerificationEmail(email);
        }
        
        public System.Threading.Tasks.Task<bool> VerificationEmailAsync(string email) {
            return base.Channel.VerificationEmailAsync(email);
        }
        
        public void UpdateProductPrice(string nameProduct, int price) {
            base.Channel.UpdateProductPrice(nameProduct, price);
        }
        
        public System.Threading.Tasks.Task UpdateProductPriceAsync(string nameProduct, int price) {
            return base.Channel.UpdateProductPriceAsync(nameProduct, price);
        }
        
        public void UpdateProductAmount(string nameProduct, int amountProduct) {
            base.Channel.UpdateProductAmount(nameProduct, amountProduct);
        }
        
        public System.Threading.Tasks.Task UpdateProductAmountAsync(string nameProduct, int amountProduct) {
            return base.Channel.UpdateProductAmountAsync(nameProduct, amountProduct);
        }
        
        public void UpdateProductDescription(string nameProduct, string description) {
            base.Channel.UpdateProductDescription(nameProduct, description);
        }
        
        public System.Threading.Tasks.Task UpdateProductDescriptionAsync(string nameProduct, string description) {
            return base.Channel.UpdateProductDescriptionAsync(nameProduct, description);
        }
        
        public UI.ServiceReference1.Product[] UserProduct(int ID) {
            return base.Channel.UserProduct(ID);
        }
        
        public System.Threading.Tasks.Task<UI.ServiceReference1.Product[]> UserProductAsync(int ID) {
            return base.Channel.UserProductAsync(ID);
        }
        
        public UI.ServiceReference1.Product[] WarehoseProductAddedByAdmin() {
            return base.Channel.WarehoseProductAddedByAdmin();
        }
        
        public System.Threading.Tasks.Task<UI.ServiceReference1.Product[]> WarehoseProductAddedByAdminAsync() {
            return base.Channel.WarehoseProductAddedByAdminAsync();
        }
        
        public void UpdateProductPhoto(string productName, byte[] photo) {
            base.Channel.UpdateProductPhoto(productName, photo);
        }
        
        public System.Threading.Tasks.Task UpdateProductPhotoAsync(string productName, byte[] photo) {
            return base.Channel.UpdateProductPhotoAsync(productName, photo);
        }
        
        public void UserUpdateAvatar(string login, byte[] avatar) {
            base.Channel.UserUpdateAvatar(login, avatar);
        }
        
        public System.Threading.Tasks.Task UserUpdateAvatarAsync(string login, byte[] avatar) {
            return base.Channel.UserUpdateAvatarAsync(login, avatar);
        }
        
        public void ChangePass(string login, string pass) {
            base.Channel.ChangePass(login, pass);
        }
        
        public System.Threading.Tasks.Task ChangePassAsync(string login, string pass) {
            return base.Channel.ChangePassAsync(login, pass);
        }
        
        public void ChangeUserEmail(string login, string newEmail) {
            base.Channel.ChangeUserEmail(login, newEmail);
        }
        
        public System.Threading.Tasks.Task ChangeUserEmailAsync(string login, string newEmail) {
            return base.Channel.ChangeUserEmailAsync(login, newEmail);
        }
        
        public void ChangeUserNickname(string login, string nick) {
            base.Channel.ChangeUserNickname(login, nick);
        }
        
        public System.Threading.Tasks.Task ChangeUserNicknameAsync(string login, string nick) {
            return base.Channel.ChangeUserNicknameAsync(login, nick);
        }
        
        public UI.ServiceReference1.DTOUser UserInfo(string login) {
            return base.Channel.UserInfo(login);
        }
        
        public System.Threading.Tasks.Task<UI.ServiceReference1.DTOUser> UserInfoAsync(string login) {
            return base.Channel.UserInfoAsync(login);
        }
        
        public UI.ServiceReference1.DTOProduct ProdInfo(string productName, int userID) {
            return base.Channel.ProdInfo(productName, userID);
        }
        
        public System.Threading.Tasks.Task<UI.ServiceReference1.DTOProduct> ProdInfoAsync(string productName, int userID) {
            return base.Channel.ProdInfoAsync(productName, userID);
        }
    }
}
